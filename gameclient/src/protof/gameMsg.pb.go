// Code generated by protoc-gen-go.
// source: gameMsg.proto
// DO NOT EDIT!

/*
Package protof is a generated protocol buffer package.

It is generated from these files:
	gameMsg.proto

It has these top-level messages:
	Message1
*/
package protof

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message1_ID int32

const (
	Message1_CSPIND                      Message1_ID = 99
	Message1_SCPIND                      Message1_ID = 100
	Message1_CS_LOGINMESSAGE             Message1_ID = 101
	Message1_SC_LOGINMESSAGE             Message1_ID = 102
	Message1_CS_FIGHTDATA                Message1_ID = 103
	Message1_SC_FIGHTDATA                Message1_ID = 104
	Message1_CS_FIGHTSTART               Message1_ID = 105
	Message1_SC_FIGHTSTART               Message1_ID = 106
	Message1_CS_GETRANK                  Message1_ID = 107
	Message1_SC_GETRANK                  Message1_ID = 108
	Message1_CS_FIGHTDATA_TUNNEL_CAPTURE Message1_ID = 109
	Message1_SC_FIGHTDATA_TUNNEL_CAPTURE Message1_ID = 110
)

var Message1_ID_name = map[int32]string{
	99:  "CSPIND",
	100: "SCPIND",
	101: "CS_LOGINMESSAGE",
	102: "SC_LOGINMESSAGE",
	103: "CS_FIGHTDATA",
	104: "SC_FIGHTDATA",
	105: "CS_FIGHTSTART",
	106: "SC_FIGHTSTART",
	107: "CS_GETRANK",
	108: "SC_GETRANK",
	109: "CS_FIGHTDATA_TUNNEL_CAPTURE",
	110: "SC_FIGHTDATA_TUNNEL_CAPTURE",
}
var Message1_ID_value = map[string]int32{
	"CSPIND":                      99,
	"SCPIND":                      100,
	"CS_LOGINMESSAGE":             101,
	"SC_LOGINMESSAGE":             102,
	"CS_FIGHTDATA":                103,
	"SC_FIGHTDATA":                104,
	"CS_FIGHTSTART":               105,
	"SC_FIGHTSTART":               106,
	"CS_GETRANK":                  107,
	"SC_GETRANK":                  108,
	"CS_FIGHTDATA_TUNNEL_CAPTURE": 109,
	"SC_FIGHTDATA_TUNNEL_CAPTURE": 110,
}

func (x Message1_ID) Enum() *Message1_ID {
	p := new(Message1_ID)
	*p = x
	return p
}
func (x Message1_ID) String() string {
	return proto.EnumName(Message1_ID_name, int32(x))
}
func (x *Message1_ID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Message1_ID_value, data, "Message1_ID")
	if err != nil {
		return err
	}
	*x = Message1_ID(value)
	return nil
}
func (Message1_ID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Message1 struct {
	CsPing                   *Message1_CS_Ping                     `protobuf:"bytes,99,opt,name=cs_ping" json:"cs_ping,omitempty"`
	ScPing                   *Message1_SC_Ping                     `protobuf:"bytes,100,opt,name=sc_ping" json:"sc_ping,omitempty"`
	CsLoginMessage           *Message1_CS_LoginMessage             `protobuf:"bytes,101,opt,name=cs_login_message" json:"cs_login_message,omitempty"`
	ScLoginMessage           *Message1_SC_LoginMessage             `protobuf:"bytes,102,opt,name=sc_login_message" json:"sc_login_message,omitempty"`
	CsFightData              *Message1_CS_FightData                `protobuf:"bytes,103,opt,name=cs_fight_data" json:"cs_fight_data,omitempty"`
	ScFightData              *Message1_SC_FightData                `protobuf:"bytes,104,opt,name=sc_fight_data" json:"sc_fight_data,omitempty"`
	CsFightStart             *Message1_CS_FightStart               `protobuf:"bytes,105,opt,name=cs_fight_start" json:"cs_fight_start,omitempty"`
	ScFightStart             *Message1_SC_FightStart               `protobuf:"bytes,106,opt,name=sc_fight_start" json:"sc_fight_start,omitempty"`
	CsGetRank                *Message1_CS_GetRank                  `protobuf:"bytes,107,opt,name=cs_get_rank" json:"cs_get_rank,omitempty"`
	ScGetRank                *Message1_SC_GetRank                  `protobuf:"bytes,108,opt,name=sc_get_rank" json:"sc_get_rank,omitempty"`
	CsFightDataTunnelCapture *Message1_CS_FightData_Tunnel_Capture `protobuf:"bytes,109,opt,name=cs_fightData_tunnel_capture" json:"cs_fightData_tunnel_capture,omitempty"`
	ScFightDataTunnelCapture *Message1_SC_FightData_Tunnel_Capture `protobuf:"bytes,110,opt,name=sc_fightData_tunnel_capture" json:"sc_fightData_tunnel_capture,omitempty"`
	XXX_unrecognized         []byte                                `json:"-"`
}

func (m *Message1) Reset()                    { *m = Message1{} }
func (m *Message1) String() string            { return proto.CompactTextString(m) }
func (*Message1) ProtoMessage()               {}
func (*Message1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message1) GetCsPing() *Message1_CS_Ping {
	if m != nil {
		return m.CsPing
	}
	return nil
}

func (m *Message1) GetScPing() *Message1_SC_Ping {
	if m != nil {
		return m.ScPing
	}
	return nil
}

func (m *Message1) GetCsLoginMessage() *Message1_CS_LoginMessage {
	if m != nil {
		return m.CsLoginMessage
	}
	return nil
}

func (m *Message1) GetScLoginMessage() *Message1_SC_LoginMessage {
	if m != nil {
		return m.ScLoginMessage
	}
	return nil
}

func (m *Message1) GetCsFightData() *Message1_CS_FightData {
	if m != nil {
		return m.CsFightData
	}
	return nil
}

func (m *Message1) GetScFightData() *Message1_SC_FightData {
	if m != nil {
		return m.ScFightData
	}
	return nil
}

func (m *Message1) GetCsFightStart() *Message1_CS_FightStart {
	if m != nil {
		return m.CsFightStart
	}
	return nil
}

func (m *Message1) GetScFightStart() *Message1_SC_FightStart {
	if m != nil {
		return m.ScFightStart
	}
	return nil
}

func (m *Message1) GetCsGetRank() *Message1_CS_GetRank {
	if m != nil {
		return m.CsGetRank
	}
	return nil
}

func (m *Message1) GetScGetRank() *Message1_SC_GetRank {
	if m != nil {
		return m.ScGetRank
	}
	return nil
}

func (m *Message1) GetCsFightDataTunnelCapture() *Message1_CS_FightData_Tunnel_Capture {
	if m != nil {
		return m.CsFightDataTunnelCapture
	}
	return nil
}

func (m *Message1) GetScFightDataTunnelCapture() *Message1_SC_FightData_Tunnel_Capture {
	if m != nil {
		return m.ScFightDataTunnelCapture
	}
	return nil
}

type Message1_CS_Ping struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message1_CS_Ping) Reset()                    { *m = Message1_CS_Ping{} }
func (m *Message1_CS_Ping) String() string            { return proto.CompactTextString(m) }
func (*Message1_CS_Ping) ProtoMessage()               {}
func (*Message1_CS_Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Message1_CS_Ping) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

type Message1_SC_Ping struct {
	Time             *float32 `protobuf:"fixed32,1,req,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Message1_SC_Ping) Reset()                    { *m = Message1_SC_Ping{} }
func (m *Message1_SC_Ping) String() string            { return proto.CompactTextString(m) }
func (*Message1_SC_Ping) ProtoMessage()               {}
func (*Message1_SC_Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Message1_SC_Ping) GetTime() float32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type Message1_CS_LoginMessage struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Opt              *int32  `protobuf:"varint,3,req,name=opt" json:"opt,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message1_CS_LoginMessage) Reset()                    { *m = Message1_CS_LoginMessage{} }
func (m *Message1_CS_LoginMessage) String() string            { return proto.CompactTextString(m) }
func (*Message1_CS_LoginMessage) ProtoMessage()               {}
func (*Message1_CS_LoginMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Message1_CS_LoginMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Message1_CS_LoginMessage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Message1_CS_LoginMessage) GetOpt() int32 {
	if m != nil && m.Opt != nil {
		return *m.Opt
	}
	return 0
}

type Message1_SC_LoginMessage struct {
	Code             *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	LoginTime        *int32  `protobuf:"varint,3,req,name=loginTime" json:"loginTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message1_SC_LoginMessage) Reset()                    { *m = Message1_SC_LoginMessage{} }
func (m *Message1_SC_LoginMessage) String() string            { return proto.CompactTextString(m) }
func (*Message1_SC_LoginMessage) ProtoMessage()               {}
func (*Message1_SC_LoginMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *Message1_SC_LoginMessage) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Message1_SC_LoginMessage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Message1_SC_LoginMessage) GetLoginTime() int32 {
	if m != nil && m.LoginTime != nil {
		return *m.LoginTime
	}
	return 0
}

type Message1_CS_FightData struct {
	Speed            *int32 `protobuf:"varint,1,req,name=speed" json:"speed,omitempty"`
	Attack           *int32 `protobuf:"varint,2,req,name=attack" json:"attack,omitempty"`
	MoveX            *int32 `protobuf:"varint,3,req,name=move_x" json:"move_x,omitempty"`
	MoveY            *int32 `protobuf:"varint,4,req,name=move_y" json:"move_y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message1_CS_FightData) Reset()                    { *m = Message1_CS_FightData{} }
func (m *Message1_CS_FightData) String() string            { return proto.CompactTextString(m) }
func (*Message1_CS_FightData) ProtoMessage()               {}
func (*Message1_CS_FightData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *Message1_CS_FightData) GetSpeed() int32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *Message1_CS_FightData) GetAttack() int32 {
	if m != nil && m.Attack != nil {
		return *m.Attack
	}
	return 0
}

func (m *Message1_CS_FightData) GetMoveX() int32 {
	if m != nil && m.MoveX != nil {
		return *m.MoveX
	}
	return 0
}

func (m *Message1_CS_FightData) GetMoveY() int32 {
	if m != nil && m.MoveY != nil {
		return *m.MoveY
	}
	return 0
}

type Message1_SC_FightData struct {
	Round            *int32                   `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	Result           *int32                   `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	MySide           *Message1_FightStateData `protobuf:"bytes,3,req,name=my_side" json:"my_side,omitempty"`
	OtherSide        *Message1_FightStateData `protobuf:"bytes,4,req,name=other_side" json:"other_side,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Message1_SC_FightData) Reset()                    { *m = Message1_SC_FightData{} }
func (m *Message1_SC_FightData) String() string            { return proto.CompactTextString(m) }
func (*Message1_SC_FightData) ProtoMessage()               {}
func (*Message1_SC_FightData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

func (m *Message1_SC_FightData) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *Message1_SC_FightData) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Message1_SC_FightData) GetMySide() *Message1_FightStateData {
	if m != nil {
		return m.MySide
	}
	return nil
}

func (m *Message1_SC_FightData) GetOtherSide() *Message1_FightStateData {
	if m != nil {
		return m.OtherSide
	}
	return nil
}

type Message1_FightStateData struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	MapX             *int32  `protobuf:"varint,2,req,name=map_x" json:"map_x,omitempty"`
	MapY             *int32  `protobuf:"varint,3,req,name=map_y" json:"map_y,omitempty"`
	Life             *int32  `protobuf:"varint,4,req,name=life" json:"life,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message1_FightStateData) Reset()                    { *m = Message1_FightStateData{} }
func (m *Message1_FightStateData) String() string            { return proto.CompactTextString(m) }
func (*Message1_FightStateData) ProtoMessage()               {}
func (*Message1_FightStateData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *Message1_FightStateData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Message1_FightStateData) GetMapX() int32 {
	if m != nil && m.MapX != nil {
		return *m.MapX
	}
	return 0
}

func (m *Message1_FightStateData) GetMapY() int32 {
	if m != nil && m.MapY != nil {
		return *m.MapY
	}
	return 0
}

func (m *Message1_FightStateData) GetLife() int32 {
	if m != nil && m.Life != nil {
		return *m.Life
	}
	return 0
}

type Message1_CS_FightStart struct {
	Isstart          *bool  `protobuf:"varint,1,req,name=isstart" json:"isstart,omitempty"`
	Gametype         *int32 `protobuf:"varint,2,req,name=gametype" json:"gametype,omitempty"`
	Torobot          *int32 `protobuf:"varint,3,opt,name=torobot" json:"torobot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message1_CS_FightStart) Reset()                    { *m = Message1_CS_FightStart{} }
func (m *Message1_CS_FightStart) String() string            { return proto.CompactTextString(m) }
func (*Message1_CS_FightStart) ProtoMessage()               {}
func (*Message1_CS_FightStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

func (m *Message1_CS_FightStart) GetIsstart() bool {
	if m != nil && m.Isstart != nil {
		return *m.Isstart
	}
	return false
}

func (m *Message1_CS_FightStart) GetGametype() int32 {
	if m != nil && m.Gametype != nil {
		return *m.Gametype
	}
	return 0
}

func (m *Message1_CS_FightStart) GetTorobot() int32 {
	if m != nil && m.Torobot != nil {
		return *m.Torobot
	}
	return 0
}

type Message1_SC_FightStart struct {
	IsstartA         *bool  `protobuf:"varint,1,req,name=isstartA" json:"isstartA,omitempty"`
	IsstartB         *bool  `protobuf:"varint,2,req,name=isstartB" json:"isstartB,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message1_SC_FightStart) Reset()                    { *m = Message1_SC_FightStart{} }
func (m *Message1_SC_FightStart) String() string            { return proto.CompactTextString(m) }
func (*Message1_SC_FightStart) ProtoMessage()               {}
func (*Message1_SC_FightStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 8} }

func (m *Message1_SC_FightStart) GetIsstartA() bool {
	if m != nil && m.IsstartA != nil {
		return *m.IsstartA
	}
	return false
}

func (m *Message1_SC_FightStart) GetIsstartB() bool {
	if m != nil && m.IsstartB != nil {
		return *m.IsstartB
	}
	return false
}

type Message1_CS_GetRank struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message1_CS_GetRank) Reset()                    { *m = Message1_CS_GetRank{} }
func (m *Message1_CS_GetRank) String() string            { return proto.CompactTextString(m) }
func (*Message1_CS_GetRank) ProtoMessage()               {}
func (*Message1_CS_GetRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 9} }

func (m *Message1_CS_GetRank) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

type Message1_SC_GetRank struct {
	Code             *int32               `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	RankData         []*Message1_RankData `protobuf:"bytes,2,rep,name=rank_data" json:"rank_data,omitempty"`
	MyRanking        *Message1_RankData   `protobuf:"bytes,3,req,name=my_ranking" json:"my_ranking,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Message1_SC_GetRank) Reset()                    { *m = Message1_SC_GetRank{} }
func (m *Message1_SC_GetRank) String() string            { return proto.CompactTextString(m) }
func (*Message1_SC_GetRank) ProtoMessage()               {}
func (*Message1_SC_GetRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 10} }

func (m *Message1_SC_GetRank) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Message1_SC_GetRank) GetRankData() []*Message1_RankData {
	if m != nil {
		return m.RankData
	}
	return nil
}

func (m *Message1_SC_GetRank) GetMyRanking() *Message1_RankData {
	if m != nil {
		return m.MyRanking
	}
	return nil
}

// 排行榜信息
type Message1_RankData struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Score            *int32  `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	Ranking          *int32  `protobuf:"varint,3,opt,name=ranking" json:"ranking,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message1_RankData) Reset()                    { *m = Message1_RankData{} }
func (m *Message1_RankData) String() string            { return proto.CompactTextString(m) }
func (*Message1_RankData) ProtoMessage()               {}
func (*Message1_RankData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 11} }

func (m *Message1_RankData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Message1_RankData) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *Message1_RankData) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

type Message1_Map_Info struct {
	X                *int32 `protobuf:"varint,1,req,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Message1_Map_Info) Reset()                    { *m = Message1_Map_Info{} }
func (m *Message1_Map_Info) String() string            { return proto.CompactTextString(m) }
func (*Message1_Map_Info) ProtoMessage()               {}
func (*Message1_Map_Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 12} }

func (m *Message1_Map_Info) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Message1_Map_Info) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type Message1_CS_FightData_Tunnel_Capture struct {
	MovePoints       []*Message1_Map_Info `protobuf:"bytes,1,rep,name=MovePoints" json:"MovePoints,omitempty"`
	CapturePoints    []*Message1_Map_Info `protobuf:"bytes,2,rep,name=CapturePoints" json:"CapturePoints,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Message1_CS_FightData_Tunnel_Capture) Reset()         { *m = Message1_CS_FightData_Tunnel_Capture{} }
func (m *Message1_CS_FightData_Tunnel_Capture) String() string { return proto.CompactTextString(m) }
func (*Message1_CS_FightData_Tunnel_Capture) ProtoMessage()    {}
func (*Message1_CS_FightData_Tunnel_Capture) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 13}
}

func (m *Message1_CS_FightData_Tunnel_Capture) GetMovePoints() []*Message1_Map_Info {
	if m != nil {
		return m.MovePoints
	}
	return nil
}

func (m *Message1_CS_FightData_Tunnel_Capture) GetCapturePoints() []*Message1_Map_Info {
	if m != nil {
		return m.CapturePoints
	}
	return nil
}

type Message1_FightStateData_Capture struct {
	Name                *string              `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	OtherName           *string              `protobuf:"bytes,2,req,name=OtherName" json:"OtherName,omitempty"`
	BirthPoint          *Message1_Map_Info   `protobuf:"bytes,3,req,name=BirthPoint" json:"BirthPoint,omitempty"`
	ExcavatePoits       []*Message1_Map_Info `protobuf:"bytes,4,rep,name=ExcavatePoits" json:"ExcavatePoits,omitempty"`
	OtherExcavatePoints []*Message1_Map_Info `protobuf:"bytes,5,rep,name=OtherExcavatePoints" json:"OtherExcavatePoints,omitempty"`
	MovePoints          []*Message1_Map_Info `protobuf:"bytes,6,rep,name=MovePoints" json:"MovePoints,omitempty"`
	OtherBirthPoint     *Message1_Map_Info   `protobuf:"bytes,7,req,name=OtherBirthPoint" json:"OtherBirthPoint,omitempty"`
	UserAtPoint         *Message1_Map_Info   `protobuf:"bytes,8,req,name=UserAtPoint" json:"UserAtPoint,omitempty"`
	OtherUserAtPoint    *Message1_Map_Info   `protobuf:"bytes,9,req,name=OtherUserAtPoint" json:"OtherUserAtPoint,omitempty"`
	LastPower           *int32               `protobuf:"varint,10,req,name=LastPower" json:"LastPower,omitempty"`
	OtherPower          *int32               `protobuf:"varint,11,req,name=OtherPower" json:"OtherPower,omitempty"`
	XXX_unrecognized    []byte               `json:"-"`
}

func (m *Message1_FightStateData_Capture) Reset()         { *m = Message1_FightStateData_Capture{} }
func (m *Message1_FightStateData_Capture) String() string { return proto.CompactTextString(m) }
func (*Message1_FightStateData_Capture) ProtoMessage()    {}
func (*Message1_FightStateData_Capture) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 14}
}

func (m *Message1_FightStateData_Capture) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Message1_FightStateData_Capture) GetOtherName() string {
	if m != nil && m.OtherName != nil {
		return *m.OtherName
	}
	return ""
}

func (m *Message1_FightStateData_Capture) GetBirthPoint() *Message1_Map_Info {
	if m != nil {
		return m.BirthPoint
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetExcavatePoits() []*Message1_Map_Info {
	if m != nil {
		return m.ExcavatePoits
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetOtherExcavatePoints() []*Message1_Map_Info {
	if m != nil {
		return m.OtherExcavatePoints
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetMovePoints() []*Message1_Map_Info {
	if m != nil {
		return m.MovePoints
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetOtherBirthPoint() *Message1_Map_Info {
	if m != nil {
		return m.OtherBirthPoint
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetUserAtPoint() *Message1_Map_Info {
	if m != nil {
		return m.UserAtPoint
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetOtherUserAtPoint() *Message1_Map_Info {
	if m != nil {
		return m.OtherUserAtPoint
	}
	return nil
}

func (m *Message1_FightStateData_Capture) GetLastPower() int32 {
	if m != nil && m.LastPower != nil {
		return *m.LastPower
	}
	return 0
}

func (m *Message1_FightStateData_Capture) GetOtherPower() int32 {
	if m != nil && m.OtherPower != nil {
		return *m.OtherPower
	}
	return 0
}

type Message1_SC_FightData_Tunnel_Capture struct {
	Code             *int32                           `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Round            *int32                           `protobuf:"varint,2,req,name=round" json:"round,omitempty"`
	Result           *int32                           `protobuf:"varint,3,req,name=result" json:"result,omitempty"`
	FightStateData   *Message1_FightStateData_Capture `protobuf:"bytes,4,req,name=fight_state_data" json:"fight_state_data,omitempty"`
	IsFight          *bool                            `protobuf:"varint,5,req,name=is_fight" json:"is_fight,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *Message1_SC_FightData_Tunnel_Capture) Reset()         { *m = Message1_SC_FightData_Tunnel_Capture{} }
func (m *Message1_SC_FightData_Tunnel_Capture) String() string { return proto.CompactTextString(m) }
func (*Message1_SC_FightData_Tunnel_Capture) ProtoMessage()    {}
func (*Message1_SC_FightData_Tunnel_Capture) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 15}
}

func (m *Message1_SC_FightData_Tunnel_Capture) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Message1_SC_FightData_Tunnel_Capture) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *Message1_SC_FightData_Tunnel_Capture) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Message1_SC_FightData_Tunnel_Capture) GetFightStateData() *Message1_FightStateData_Capture {
	if m != nil {
		return m.FightStateData
	}
	return nil
}

func (m *Message1_SC_FightData_Tunnel_Capture) GetIsFight() bool {
	if m != nil && m.IsFight != nil {
		return *m.IsFight
	}
	return false
}

func init() {
	proto.RegisterType((*Message1)(nil), "protof.Message1")
	proto.RegisterType((*Message1_CS_Ping)(nil), "protof.Message1.CS_Ping")
	proto.RegisterType((*Message1_SC_Ping)(nil), "protof.Message1.SC_Ping")
	proto.RegisterType((*Message1_CS_LoginMessage)(nil), "protof.Message1.CS_LoginMessage")
	proto.RegisterType((*Message1_SC_LoginMessage)(nil), "protof.Message1.SC_LoginMessage")
	proto.RegisterType((*Message1_CS_FightData)(nil), "protof.Message1.CS_FightData")
	proto.RegisterType((*Message1_SC_FightData)(nil), "protof.Message1.SC_FightData")
	proto.RegisterType((*Message1_FightStateData)(nil), "protof.Message1.FightStateData")
	proto.RegisterType((*Message1_CS_FightStart)(nil), "protof.Message1.CS_FightStart")
	proto.RegisterType((*Message1_SC_FightStart)(nil), "protof.Message1.SC_FightStart")
	proto.RegisterType((*Message1_CS_GetRank)(nil), "protof.Message1.CS_GetRank")
	proto.RegisterType((*Message1_SC_GetRank)(nil), "protof.Message1.SC_GetRank")
	proto.RegisterType((*Message1_RankData)(nil), "protof.Message1.RankData")
	proto.RegisterType((*Message1_Map_Info)(nil), "protof.Message1.Map_Info")
	proto.RegisterType((*Message1_CS_FightData_Tunnel_Capture)(nil), "protof.Message1.CS_FightData_Tunnel_Capture")
	proto.RegisterType((*Message1_FightStateData_Capture)(nil), "protof.Message1.FightStateData_Capture")
	proto.RegisterType((*Message1_SC_FightData_Tunnel_Capture)(nil), "protof.Message1.SC_FightData_Tunnel_Capture")
	proto.RegisterEnum("protof.Message1_ID", Message1_ID_name, Message1_ID_value)
}

func init() { proto.RegisterFile("gameMsg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 958 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x95, 0x51, 0x6f, 0xe2, 0x46,
	0x10, 0xc7, 0x65, 0x07, 0x02, 0x0c, 0x10, 0x1c, 0x47, 0x6a, 0x5d, 0x47, 0xed, 0xa1, 0x7b, 0x29,
	0x95, 0x2e, 0x51, 0x9a, 0x54, 0xa7, 0x53, 0x9f, 0xea, 0x73, 0x68, 0x4a, 0x1b, 0x38, 0x1a, 0x3b,
	0xcf, 0xd6, 0xd6, 0x2c, 0xc6, 0x07, 0xb6, 0x91, 0x77, 0x93, 0x0b, 0x2f, 0xfd, 0x14, 0x7d, 0xef,
	0x67, 0xe9, 0x77, 0xe9, 0x27, 0xe8, 0x27, 0xa8, 0x76, 0xd7, 0x36, 0xb6, 0x83, 0xc3, 0x3d, 0xc1,
	0x8e, 0xe7, 0xf7, 0x9f, 0x9d, 0xf1, 0xcc, 0x18, 0xba, 0x1e, 0x0a, 0xf0, 0x98, 0x78, 0xe7, 0xeb,
	0x38, 0xa2, 0x91, 0x7a, 0xc8, 0x7f, 0xe6, 0xaf, 0xff, 0x3d, 0x81, 0xe6, 0x18, 0x13, 0x82, 0x3c,
	0xfc, 0xbd, 0xfa, 0x1d, 0x34, 0x5c, 0xe2, 0xac, 0xfd, 0xd0, 0xd3, 0xdc, 0xbe, 0x34, 0x68, 0x5f,
	0x6a, 0xc2, 0x7b, 0x7e, 0x9e, 0xba, 0x9c, 0x9b, 0x96, 0x33, 0xf5, 0x43, 0x8f, 0xb9, 0x12, 0x57,
	0xb8, 0xce, 0x2a, 0x5c, 0x2d, 0x53, 0xb8, 0xfe, 0x08, 0x8a, 0x4b, 0x9c, 0x55, 0xe4, 0xf9, 0xa1,
	0x13, 0x88, 0x87, 0x1a, 0xe6, 0x4c, 0x7f, 0x97, 0xfc, 0x2d, 0x73, 0x4c, 0x0c, 0x8c, 0x25, 0x6e,
	0x89, 0x9d, 0x57, 0xb0, 0x96, 0x59, 0x64, 0x7f, 0x80, 0xae, 0x4b, 0x9c, 0xb9, 0xef, 0x2d, 0xa8,
	0x33, 0x43, 0x14, 0x69, 0x1e, 0x07, 0xbf, 0xde, 0x15, 0xf4, 0x67, 0xe6, 0x75, 0x8d, 0x28, 0x62,
	0x14, 0x71, 0xf3, 0xd4, 0xa2, 0x82, 0xb2, 0xcc, 0x1c, 0xf5, 0x16, 0x8e, 0xb2, 0x58, 0x84, 0xa2,
	0x98, 0x6a, 0x3e, 0xc7, 0xbe, 0xa9, 0x0c, 0x66, 0x31, 0x2f, 0xc6, 0x65, 0xd1, 0x04, 0xf7, 0xb1,
	0x82, 0x4b, 0xc3, 0x09, 0xee, 0x02, 0xda, 0x2e, 0x71, 0x3c, 0x4c, 0x9d, 0x18, 0x85, 0x4b, 0x6d,
	0xc9, 0xa1, 0xd3, 0x5d, 0xc1, 0x6e, 0x30, 0xbd, 0x43, 0xe1, 0x92, 0x11, 0xc4, 0xdd, 0x12, 0xab,
	0x0a, 0xc2, 0x32, 0x33, 0xe2, 0x77, 0x38, 0x4d, 0x73, 0x62, 0x39, 0x3a, 0xf4, 0x21, 0x0c, 0xf1,
	0xca, 0x71, 0xd1, 0x9a, 0x3e, 0xc4, 0x58, 0x0b, 0xb8, 0xc2, 0x9b, 0x17, 0xab, 0xe9, 0xd8, 0x82,
	0x31, 0x05, 0xc3, 0x24, 0xd3, 0x74, 0x77, 0x49, 0x86, 0x15, 0x92, 0xf9, 0x52, 0x97, 0x24, 0xf5,
	0x2f, 0xa1, 0x91, 0xf6, 0x64, 0x07, 0x6a, 0x6e, 0x34, 0xc3, 0x9a, 0xd4, 0x97, 0x07, 0x75, 0xf6,
	0x20, 0xed, 0xc0, 0x0e, 0xd4, 0xa8, 0x1f, 0x88, 0x07, 0xb2, 0xfe, 0x0e, 0x7a, 0xe5, 0x36, 0x03,
	0x90, 0xfd, 0x99, 0xe0, 0x98, 0x73, 0x88, 0x02, 0xac, 0xc9, 0x7d, 0x79, 0xd0, 0x52, 0xdb, 0x70,
	0x10, 0xad, 0xa9, 0x76, 0xc0, 0x25, 0x7f, 0x82, 0x5e, 0xb9, 0xc9, 0x0a, 0x31, 0x4b, 0xec, 0x31,
	0xb4, 0x78, 0xe7, 0xda, 0x2c, 0xb6, 0x50, 0x18, 0x43, 0xa7, 0xd0, 0x6d, 0x5d, 0xa8, 0x93, 0x35,
	0xc6, 0x69, 0xec, 0x23, 0x38, 0x44, 0x94, 0x22, 0x77, 0xc9, 0x15, 0xf8, 0x39, 0x88, 0x1e, 0xb1,
	0xf3, 0x24, 0xf0, 0xec, 0xbc, 0xd1, 0x6a, 0x5c, 0xee, 0x2f, 0x09, 0x3a, 0x85, 0x3e, 0xec, 0x42,
	0x3d, 0x8e, 0x1e, 0xc2, 0x9c, 0x5e, 0x8c, 0xc9, 0xc3, 0x8a, 0x26, 0x7a, 0x17, 0xd0, 0x08, 0x36,
	0x0e, 0xf1, 0x67, 0xe2, 0x3e, 0xed, 0xcb, 0x57, 0xcf, 0x6a, 0x9d, 0x36, 0x19, 0xc5, 0x5c, 0xf0,
	0x0a, 0x20, 0xa2, 0x0b, 0x1c, 0x0b, 0xa8, 0xf6, 0x59, 0x90, 0xfe, 0x2b, 0x1c, 0x95, 0x64, 0xd2,
	0xc2, 0x48, 0xbc, 0x30, 0x5d, 0xa8, 0x07, 0x68, 0xed, 0x3c, 0x25, 0xb7, 0x4a, 0x8e, 0x9b, 0x24,
	0xc9, 0x0e, 0xd4, 0x56, 0xfe, 0x1c, 0x27, 0x29, 0x9a, 0xd0, 0x2d, 0x8e, 0x4c, 0x0f, 0x1a, 0x3e,
	0x11, 0xb3, 0xc2, 0xd4, 0x9a, 0xaa, 0x02, 0x4d, 0xb6, 0xdb, 0xe8, 0x66, 0x8d, 0x13, 0xc1, 0x1e,
	0x34, 0x68, 0x14, 0x47, 0x7f, 0x44, 0xec, 0xc5, 0x49, 0x83, 0xba, 0x7e, 0x05, 0xdd, 0xe2, 0xfc,
	0x28, 0xd0, 0x4c, 0x44, 0x8c, 0xad, 0x4a, 0x62, 0x79, 0xcf, 0x55, 0x9a, 0xba, 0x0e, 0x90, 0x9b,
	0x9f, 0x62, 0x73, 0x7d, 0x02, 0xc8, 0x4d, 0x4a, 0xb1, 0x09, 0xde, 0x40, 0x8b, 0x8d, 0x98, 0xd8,
	0x1e, 0x72, 0xff, 0x60, 0xd0, 0xbe, 0xfc, 0xea, 0x59, 0xc5, 0x18, 0xc7, 0x2b, 0x73, 0x06, 0x10,
	0x6c, 0xf8, 0x4c, 0xb2, 0x5d, 0x2a, 0xde, 0x4a, 0xb5, 0xbb, 0xfe, 0x0e, 0x9a, 0x19, 0xfa, 0xac,
	0xa8, 0xc4, 0x8d, 0xe2, 0x5c, 0x0d, 0xb6, 0xa2, 0xac, 0x06, 0x7d, 0x68, 0x8e, 0xd1, 0xda, 0x19,
	0x85, 0xf3, 0x48, 0x6d, 0x81, 0xf4, 0x94, 0xdc, 0xb6, 0x05, 0xd2, 0x46, 0x20, 0xfa, 0x9f, 0x70,
	0xfa, 0xd2, 0xf0, 0x9e, 0x01, 0x8c, 0xa3, 0x47, 0x3c, 0x8d, 0xfc, 0x90, 0x12, 0x4d, 0xaa, 0x48,
	0x2c, 0x8b, 0x71, 0x01, 0xdd, 0x84, 0x4c, 0x08, 0x79, 0x0f, 0xa1, 0xff, 0x73, 0x00, 0x5f, 0x14,
	0xfb, 0x26, 0x8b, 0xdd, 0x81, 0xda, 0x64, 0x9b, 0xea, 0x31, 0xb4, 0x3e, 0xb0, 0xa6, 0x9c, 0x6c,
	0x67, 0xed, 0x0c, 0xe0, 0xbd, 0x1f, 0xd3, 0x05, 0x8f, 0x55, 0x59, 0xc6, 0xfc, 0xe5, 0x86, 0x4f,
	0x2e, 0x7a, 0x44, 0x94, 0xdd, 0x8e, 0x12, 0xad, 0xb6, 0x2f, 0x9d, 0xb7, 0x70, 0xc2, 0x63, 0xe6,
	0x30, 0x96, 0x54, 0x7d, 0x1f, 0x57, 0xac, 0xda, 0xe1, 0x3e, 0xf7, 0x4b, 0xe8, 0xf1, 0x30, 0xb9,
	0x64, 0x1a, 0xfb, 0x92, 0x39, 0x87, 0xf6, 0x3d, 0xc1, 0xb1, 0x41, 0x85, 0x7f, 0x73, 0x9f, 0xff,
	0x15, 0x28, 0x3c, 0x46, 0x1e, 0x6a, 0xed, 0x83, 0x8e, 0xa1, 0x75, 0x8b, 0x08, 0x9d, 0x46, 0x9f,
	0x70, 0xac, 0x01, 0x6f, 0x1d, 0x15, 0x80, 0xeb, 0x08, 0x5b, 0x9b, 0xf7, 0xd0, 0xdf, 0x12, 0x9c,
	0xbe, 0xb0, 0xae, 0x4b, 0xa3, 0x92, 0xad, 0x2b, 0xb9, 0xb4, 0xae, 0xc4, 0x26, 0x30, 0x40, 0xc9,
	0x3e, 0x8d, 0x14, 0x8b, 0x81, 0x12, 0x2b, 0xe8, 0xdb, 0x3d, 0x2b, 0x28, 0x8b, 0xc7, 0xc7, 0x5a,
	0x7c, 0x71, 0xb4, 0x3a, 0x1b, 0xeb, 0xd7, 0xff, 0x49, 0x20, 0x8f, 0xae, 0x55, 0x80, 0x43, 0xd3,
	0x9a, 0x8e, 0x26, 0xd7, 0x8a, 0xcb, 0xfe, 0x5b, 0x26, 0xff, 0x3f, 0x53, 0x4f, 0xc4, 0xd7, 0xe1,
	0xc3, 0xcd, 0x68, 0x32, 0x1e, 0x5a, 0x96, 0x71, 0x33, 0x54, 0x30, 0x33, 0xb2, 0xc5, 0x9f, 0x37,
	0xce, 0x55, 0x45, 0xec, 0xf2, 0xd1, 0xcd, 0x2f, 0xf6, 0xb5, 0x61, 0x1b, 0x8a, 0xc7, 0x2c, 0x2c,
	0xf7, 0xcc, 0xb2, 0x50, 0x8f, 0xc5, 0xf6, 0x62, 0x16, 0xcb, 0x36, 0xee, 0x6c, 0xc5, 0x67, 0xa6,
	0xd4, 0x49, 0x98, 0x3e, 0xaa, 0x47, 0x62, 0xd3, 0x0c, 0xed, 0x3b, 0x63, 0xf2, 0x9b, 0xb2, 0x64,
	0x67, 0xb6, 0x5d, 0x92, 0xf3, 0x4a, 0x7d, 0x25, 0x06, 0x33, 0xd5, 0x75, 0xec, 0xfb, 0xc9, 0x64,
	0x78, 0xeb, 0x98, 0xc6, 0xd4, 0xbe, 0xbf, 0x1b, 0x2a, 0x01, 0x73, 0xc8, 0x07, 0x2e, 0x3b, 0x84,
	0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x23, 0xc0, 0xf8, 0x83, 0xfe, 0x09, 0x00, 0x00,
}
